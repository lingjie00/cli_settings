#!/bin/bash

#######################
# check folder exists #
#######################
# if not, create folders
[ -d ~/.config ] || { echo "creating .config folder"; mkdir ~/.config; }
[ -d ~/.config/nvim ] || { echo "creating nvim config folder" ; mkdir ~/.config/nvim; }
[ -d ~/.config/nvim/lua ] || { echo "creating nvim/lua config folder" ; mkdir ~/.config/nvim/lua; }
[ -d ~/.config/fish ] || { echo "creating fish config folder" ; mkdir ~/.config/fish; }
[ -d ~/.config/fish/functions ] || { echo "creating fish/functions config folder" ; mkdir ~/.config/fish/functions; }

# macos specific preference
files=("limelight" "skhd" "yabai")
if [[ "$OSTYPE" == "darwin"* ]]; then
    for program in ${files[@]}
    do
        [ -d ~/.config/$program ] || { echo "creating $program config folder"; mkdir ~/.config/$program; }
    done
fi


#########################
# create symbolic links #
#########################
files=(
    ".vimrc" ".zshrc" ".tmux.conf" ".gitconfig"
    ".config/nvim/init.vim"
    ".config/nvim/plugin.vim"
    ".config/nvim/keymap.vim"
    ".config/nvim/lua/lualine_theme.lua"
    ".config/nvim/lua/config.lua"
    ".config/fish/config.fish"
    ".config/fish/fish_plugins"
    ".config/fish/functions/fish_prompt.fish"
    ".config/fish/functions/fish_right_prompt.fish"
    ".config/fish/functions/fisher.fish"
    );

for file in ${files[@]}
    do
        [ -f ~/$file ] || { echo "creating $file symlink"; ln -s $PWD/$file ~/$file; }
done

# macos specific config files
files=("skhd/skhdrc" "yabai/yabairc" "limelight/limelightrc")
if [[ "$OSTYPE" == "darwin"* ]]; then
    for file in ${files[@]}
    do
        [ -f ~/.config/$file ] || { echo "creating $file symlink"; ln -s $PWD/.config/$file ~/.config/$file; }
    done
fi


####################
# workplace script #
####################
files=("nb_clean" "tmux_setup")
for file in ${files[@]}
do
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        [ -f /usr/local/bin/$file ] || { echo "transfer $file"; sudo ln -s $PWD/$file /usr/local/bin/$file; }
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        [ -f /usr/local/bin/$file ] || { echo "transfer $file"; ln -s $PWD/$file /usr/local/bin/$file; }
    fi
done

echo "Done with config"
